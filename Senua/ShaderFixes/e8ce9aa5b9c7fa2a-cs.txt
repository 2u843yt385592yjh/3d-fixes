// asmtool.py --remap-cb 0 100 -i e8ce9aa5b9c7fa2a-cs.txt
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.65 on Tue Sep 12 13:42:43 2017
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[227], dynamicIndexed
dcl_resource_texture3d (float,float,float,float) t0
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 23
dcl_thread_group 4, 4, 4
dcl_resource_structured t100, 480

// cb0 remapped to t100 with DarkStarSword's asmtool.py:
// asmtool.py --remap-cb 0 100 -i e8ce9aa5b9c7fa2a-cs.txt
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r6.xyzw, l(0), l(64), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r7.xyzw, l(0), l(80), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r8.xyzw, l(0), l(96), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r9.xyzw, l(0), l(192), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r10.xyzw, l(0), l(208), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r11.xyzw, l(0), l(224), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r12.xyzw, l(0), l(240), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r13.xyzw, l(0), l(256), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r14.xyzw, l(0), l(336), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r15.xyzw, l(0), l(352), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r16.xyzw, l(0), l(368), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r17.xyzw, l(0), l(384), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r18.xyzw, l(0), l(400), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r19.xyzw, l(0), l(416), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r20.xyzw, l(0), l(432), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r21.xyzw, l(0), l(448), t100.xyzw
ld_structured_indexable(structured_buffer, stride=480)(mixed,mixed,mixed,mixed) r22.xyzw, l(0), l(464), t100.xyzw

utof r0.xyz, vThreadID.xyzx
add r1.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r0.w, r22.y
add r0.w, r0.w, r0.z
mad r1.xy, r1.xyxx, r19.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.w, r0.w, r21.z
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, r21.w, r9.w
mul r1.yzw, r1.yyyy, r7.xxyz
mad r1.xyz, r1.xxxx, r6.xyzx, r1.yzwy
add r1.xyz, r1.xyzx, r8.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r9.xyzx
add r0.w, r1.z, -cb1[225].y
mul r0.w, r0.w, -cb1[225].z
min r0.w, r0.w, l(126.000000)
max r0.w, r0.w, l(-125.000000)
exp r0.w, r0.w
mul r0.w, r0.w, cb1[225].x
max r0.w, r0.w, l(0.000000)
mul r2.xyz, r0.wwww, cb1[224].xyzx
mov r3.xyz, r2.xyzx
mov r3.w, r0.w
mov r1.w, l(0)
loop 
  uge r2.w, r1.w, cb1[226].x
  breakc_nz r2.w
  ishl r2.w, r1.w, l(2)
  mul r4.xyz, r1.yyyy, cb1[r2.w + 1].xyzx
  mad r4.xyz, r1.xxxx, cb1[r2.w + 0].xyzx, r4.xyzx
  mad r4.xyz, r1.zzzz, cb1[r2.w + 2].xyzx, r4.xyzx
  add r4.xyz, r4.xyzx, cb1[r2.w + 3].xyzx
  ge r5.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), |r4.xyzx|
  and r2.w, r5.y, r5.x
  and r2.w, r5.z, r2.w
  dp3 r4.x, r4.xyzx, r4.xyzx
  ge r4.y, l(1.000000), r4.x
  movc r2.w, cb1[r1.w + 160].x, r4.y, r2.w
  add r4.x, -r4.x, l(1.000000)
  mul r4.x, r4.x, cb1[r1.w + 128].w
  mul r4.x, r4.x, cb1[r1.w + 192].x
  movc r4.w, cb1[r1.w + 160].x, r4.x, cb1[r1.w + 128].w
  mul r4.xyz, r4.wwww, cb1[r1.w + 128].xyzx
  and r2.w, r2.w, l(0x3f800000)
  mad r3.xyzw, r4.xyzw, r2.wwww, r3.xyzw
  iadd r1.w, r1.w, l(1)
endloop 
add r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xy, r0.xyxx, r19.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.z, r0.z, r21.z
mul r0.z, r0.z, r0.z
mad r0.z, r0.z, r21.w, r9.w
mul r1.xyz, r0.yyyy, r7.xyzx
mad r0.xyw, r0.xxxx, r6.xyxz, r1.xyxz
add r0.xyw, r0.xyxw, r8.xyxz
mad r0.xyz, r0.xywx, r0.zzzz, r9.xyzx
mul r1.xyz, r0.yyyy, r11.xywx
mad r1.xyz, r0.xxxx, r10.xywx, r1.xyzx
mad r1.xyz, r0.zzzz, r12.xywx, r1.xyzx
add r1.xyz, r1.xyzx, r13.xywx
div r1.xy, r1.xyxx, r1.zzzz
add r0.xyz, r0.xyzx, -r18.xyzx
mul r0.y, r0.y, r15.z
mad r0.x, r0.x, r14.z, r0.y
mad r0.x, r0.z, r16.z, r0.x
add r0.x, r0.x, r17.z
mad r0.yz, r1.xxyx, r19.xxyx, r19.xxyx
add r0.x, r0.x, -r18.w
div r0.x, r0.x, r21.w
rsq r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
itof r0.w, r20.z
mul r0.x, r0.w, r0.x
round_ni r1.xyz, r0.yzxy
ftoi r0.xyz, r1.xyzx
ige r1.xyz, r0.xyzx, l(0, 0, 0, 0)
ilt r2.xyz, r0.xyzx, r20.xyzx
and r1.xyz, r1.xyzx, r2.xyzx
and r1.x, r1.y, r1.x
and r1.x, r1.z, r1.x
mov r0.w, l(0)
ld_indexable(texture3d)(float,float,float,float) r0.xyzw, r0.xyzw, t0.xyzw
movc r1.x, r1.x, r22.z, l(1.000000)
add r1.y, -r1.x, l(1.000000)
mul r0.xyzw, r0.xyzw, r1.yyyy
mad r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw
store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xyzw
ret 
// Approximately 0 instruction slots used